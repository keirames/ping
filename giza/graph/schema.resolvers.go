package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"fmt"
	"main/graph/model"
	"strconv"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}

// SendMessage is the resolver for the sendMessage field.
func (r *mutationResolver) SendMessage(ctx context.Context, sendMessageInput model.SendMessageInput) (*model.Message, error) {
	panic(fmt.Errorf("not implemented: SendMessage - sendMessage"))
}

// SignIn is the resolver for the signIn field.
func (r *mutationResolver) SignIn(ctx context.Context, signInInput *model.SignInInput) (string, error) {
	panic(fmt.Errorf("not implemented: SignIn - signIn"))
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	panic(fmt.Errorf("not implemented: Todos - todos"))
}

// Rooms is the resolver for the rooms field.
func (r *queryResolver) Rooms(ctx context.Context, page int) (*model.PagedRooms, error) {
	rooms, err := r.RoomsService.Rooms(ctx, 67309604664680448, page)
	if err != nil {
		return nil, err
	}

	var roomsModel []*model.Room
	for _, r := range *rooms {
		roomsModel = append(roomsModel, &model.Room{
			ID:   strconv.Itoa(int(r.ID)),
			Name: r.Name,
		})
	}

	return &model.PagedRooms{
		Page:  page,
		Items: roomsModel,
	}, nil
}

// Room is the resolver for the room field.
func (r *queryResolver) Room(ctx context.Context, id string) (*model.Room, error) {
	panic(fmt.Errorf("not implemented: Room - room"))
}

// Messages is the resolver for the messages field.
func (r *queryResolver) Messages(ctx context.Context, messagesInput model.MessagesInput) (*model.PagedMessages, error) {
	panic(fmt.Errorf("not implemented: Messages - messages"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
